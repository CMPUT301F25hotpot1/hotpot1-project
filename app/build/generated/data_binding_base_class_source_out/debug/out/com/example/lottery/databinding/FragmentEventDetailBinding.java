// Generated by view binder compiler. Do not edit!
package com.example.lottery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lottery.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEventDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnJoin;

  @NonNull
  public final MaterialButton btnLeave;

  @NonNull
  public final TextView tvCounts;

  @NonNull
  public final TextView tvDesc;

  @NonNull
  public final TextView tvMeta;

  @NonNull
  public final TextView tvTitle;

  private FragmentEventDetailBinding(@NonNull ScrollView rootView, @NonNull MaterialButton btnJoin,
      @NonNull MaterialButton btnLeave, @NonNull TextView tvCounts, @NonNull TextView tvDesc,
      @NonNull TextView tvMeta, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnJoin = btnJoin;
    this.btnLeave = btnLeave;
    this.tvCounts = tvCounts;
    this.tvDesc = tvDesc;
    this.tvMeta = tvMeta;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEventDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEventDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_event_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEventDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnJoin;
      MaterialButton btnJoin = ViewBindings.findChildViewById(rootView, id);
      if (btnJoin == null) {
        break missingId;
      }

      id = R.id.btnLeave;
      MaterialButton btnLeave = ViewBindings.findChildViewById(rootView, id);
      if (btnLeave == null) {
        break missingId;
      }

      id = R.id.tvCounts;
      TextView tvCounts = ViewBindings.findChildViewById(rootView, id);
      if (tvCounts == null) {
        break missingId;
      }

      id = R.id.tvDesc;
      TextView tvDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDesc == null) {
        break missingId;
      }

      id = R.id.tvMeta;
      TextView tvMeta = ViewBindings.findChildViewById(rootView, id);
      if (tvMeta == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentEventDetailBinding((ScrollView) rootView, btnJoin, btnLeave, tvCounts,
          tvDesc, tvMeta, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
