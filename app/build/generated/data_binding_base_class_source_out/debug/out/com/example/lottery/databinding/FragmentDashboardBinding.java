// Generated by view binder compiler. Do not edit!
package com.example.lottery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lottery.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnDraw;

  @NonNull
  public final MaterialButton btnExport;

  @NonNull
  public final MaterialButton btnNotify;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final TextView tvInfo;

  private FragmentDashboardBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnDraw,
      @NonNull MaterialButton btnExport, @NonNull MaterialButton btnNotify,
      @NonNull TextView tvHeader, @NonNull TextView tvInfo) {
    this.rootView = rootView;
    this.btnDraw = btnDraw;
    this.btnExport = btnExport;
    this.btnNotify = btnNotify;
    this.tvHeader = tvHeader;
    this.tvInfo = tvInfo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDraw;
      MaterialButton btnDraw = ViewBindings.findChildViewById(rootView, id);
      if (btnDraw == null) {
        break missingId;
      }

      id = R.id.btnExport;
      MaterialButton btnExport = ViewBindings.findChildViewById(rootView, id);
      if (btnExport == null) {
        break missingId;
      }

      id = R.id.btnNotify;
      MaterialButton btnNotify = ViewBindings.findChildViewById(rootView, id);
      if (btnNotify == null) {
        break missingId;
      }

      id = R.id.tvHeader;
      TextView tvHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvHeader == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((LinearLayout) rootView, btnDraw, btnExport, btnNotify,
          tvHeader, tvInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
